#! /usr/bin/env node
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _chalk=_interopRequireDefault(require("chalk"));var _path=_interopRequireDefault(require("path"));var _commander=_interopRequireDefault(require("commander"));var _YamlAdapter=_interopRequireDefault(require("./Services/File/YamlAdapter"));var _JsAdapter=_interopRequireDefault(require("./Services/File/JsAdapter"));var _JsonAdapter=_interopRequireDefault(require("./Services/File/JsonAdapter"));var _lib=require("../lib/");var regex=new RegExp("(".concat(_YamlAdapter["default"].FORMAT,"|").concat(_JsonAdapter["default"].FORMAT,"|").concat(_JsAdapter["default"].FORMAT,")"));var format=_YamlAdapter["default"].FORMAT;_commander["default"].option('-n, --name [name]','File name','services').option('-f, --format [format]','Configuration file format',regex,format).arguments('<path>').action(function(dir){var container=new _lib.ContainerBuilder();var loader=new _lib.YamlFileLoader(container);loader.load(_path["default"].join(__dirname,'Resources','services.yaml'));console.log("\n".concat(_chalk["default"].bold.blue("Creating empty ".concat(_commander["default"].format," configuration file...")),"\n\nPath: ").concat(_chalk["default"].green(dir),"\nFile name: ").concat(_chalk["default"].green(_commander["default"].name),"\nFile format: ").concat(_chalk["default"].green(_commander["default"].format),"\n"));var fileManager=container.get("ndi.file.file_manager.".concat(_commander["default"].format));if(fileManager.createConfiguration(dir,_commander["default"].name)){console.log(_chalk["default"].bold.green('Configuration file created successfully!'));}else{console.error(_chalk["default"].bold.red('Wait! Error creating configuration file!'));}}).parse(process.argv);if(!process.argv.slice(2).length){_commander["default"].outputHelp(function(helpText){return _chalk["default"].bold.red(helpText);});}